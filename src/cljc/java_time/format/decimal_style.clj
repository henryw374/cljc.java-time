(ns cljc.java-time.format.decimal-style (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.format DecimalStyle]))
(def standard java.time.format.DecimalStyle/STANDARD)
(clojure.core/defn with-decimal-separator {:arglists (quote (["java.time.format.DecimalStyle" "char"]))} (^java.time.format.DecimalStyle [^java.time.format.DecimalStyle this13441 ^java.lang.Character char13442] (.withDecimalSeparator this13441 char13442)))
(clojure.core/defn of {:arglists (quote (["java.util.Locale"]))} (^java.time.format.DecimalStyle [^java.util.Locale java-util-Locale13443] (. java.time.format.DecimalStyle of java-util-Locale13443)))
(clojure.core/defn with-positive-sign {:arglists (quote (["java.time.format.DecimalStyle" "char"]))} (^java.time.format.DecimalStyle [^java.time.format.DecimalStyle this13444 ^java.lang.Character char13445] (.withPositiveSign this13444 char13445)))
(clojure.core/defn get-decimal-separator {:arglists (quote (["java.time.format.DecimalStyle"]))} (^java.lang.Character [^java.time.format.DecimalStyle this13446] (.getDecimalSeparator this13446)))
(clojure.core/defn of-default-locale {:arglists (quote ([]))} (^java.time.format.DecimalStyle [] (. java.time.format.DecimalStyle ofDefaultLocale)))
(clojure.core/defn with-zero-digit {:arglists (quote (["java.time.format.DecimalStyle" "char"]))} (^java.time.format.DecimalStyle [^java.time.format.DecimalStyle this13447 ^java.lang.Character char13448] (.withZeroDigit this13447 char13448)))
(clojure.core/defn to-string {:arglists (quote (["java.time.format.DecimalStyle"]))} (^java.lang.String [^java.time.format.DecimalStyle this13449] (.toString this13449)))
(clojure.core/defn get-zero-digit {:arglists (quote (["java.time.format.DecimalStyle"]))} (^java.lang.Character [^java.time.format.DecimalStyle this13450] (.getZeroDigit this13450)))
(clojure.core/defn with-negative-sign {:arglists (quote (["java.time.format.DecimalStyle" "char"]))} (^java.time.format.DecimalStyle [^java.time.format.DecimalStyle this13451 ^java.lang.Character char13452] (.withNegativeSign this13451 char13452)))
(clojure.core/defn get-available-locales {:arglists (quote ([]))} (^java.util.Set [] (. java.time.format.DecimalStyle getAvailableLocales)))
(clojure.core/defn get-positive-sign {:arglists (quote (["java.time.format.DecimalStyle"]))} (^java.lang.Character [^java.time.format.DecimalStyle this13453] (.getPositiveSign this13453)))
(clojure.core/defn hash-code {:arglists (quote (["java.time.format.DecimalStyle"]))} (^java.lang.Integer [^java.time.format.DecimalStyle this13454] (.hashCode this13454)))
(clojure.core/defn get-negative-sign {:arglists (quote (["java.time.format.DecimalStyle"]))} (^java.lang.Character [^java.time.format.DecimalStyle this13455] (.getNegativeSign this13455)))
(clojure.core/defn equals {:arglists (quote (["java.time.format.DecimalStyle" "java.lang.Object"]))} (^java.lang.Boolean [^java.time.format.DecimalStyle this13456 ^java.lang.Object java-lang-Object13457] (.equals this13456 java-lang-Object13457)))
