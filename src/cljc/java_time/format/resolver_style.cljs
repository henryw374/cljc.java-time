(ns cljc.java-time.format.resolver-style (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time.format :refer [ResolverStyle]]))
(def smart (goog.object/get java.time.format.ResolverStyle "SMART"))
(def strict (goog.object/get java.time.format.ResolverStyle "STRICT"))
(def lenient (goog.object/get java.time.format.ResolverStyle "LENIENT"))
(clojure.core/defn values {:arglists (quote ([]))} (^"java.lang.Class" [] (js-invoke java.time.format.ResolverStyle "values")))
(clojure.core/defn value-of {:arglists (quote (["java.lang.String"] ["java.lang.Class" "java.lang.String"]))} (^js/JSJoda.ResolverStyle [^java.lang.String java-lang-String9196] (js-invoke java.time.format.ResolverStyle "valueOf" java-lang-String9196)) (^java.lang.Enum [^java.lang.Class java-lang-Class9197 ^java.lang.String java-lang-String9198] (js-invoke java.time.format.ResolverStyle "valueOf" java-lang-Class9197 java-lang-String9198)))
(clojure.core/defn ordinal {:arglists (quote (["java.time.format.ResolverStyle"]))} (^int [^js/JSJoda.ResolverStyle this9199] (.ordinal this9199)))
(clojure.core/defn to-string {:arglists (quote (["java.time.format.ResolverStyle"]))} (^java.lang.String [^js/JSJoda.ResolverStyle this9200] (.toString this9200)))
(clojure.core/defn name {:arglists (quote (["java.time.format.ResolverStyle"]))} (^java.lang.String [^js/JSJoda.ResolverStyle this9201] (.name this9201)))
(clojure.core/defn get-declaring-class {:arglists (quote (["java.time.format.ResolverStyle"]))} (^java.lang.Class [^js/JSJoda.ResolverStyle this9202] (.declaringClass this9202)))
(clojure.core/defn hash-code {:arglists (quote (["java.time.format.ResolverStyle"]))} (^int [^js/JSJoda.ResolverStyle this9203] (.hashCode this9203)))
(clojure.core/defn compare-to {:arglists (quote (["java.time.format.ResolverStyle" "java.lang.Object"] ["java.time.format.ResolverStyle" "java.lang.Enum"]))} (^int [this9204 G__9205] (.compareTo ^js/JSJoda.ResolverStyle this9204 G__9205)))
(clojure.core/defn equals {:arglists (quote (["java.time.format.ResolverStyle" "java.lang.Object"]))} (^boolean [^js/JSJoda.ResolverStyle this9206 ^java.lang.Object java-lang-Object9207] (.equals this9206 java-lang-Object9207)))
