(ns cljc.java-time.format.resolver-style (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time.format :refer [ResolverStyle]]))
(def smart (. java.time.format.ResolverStyle -SMART))
(def strict (. java.time.format.ResolverStyle -STRICT))
(def lenient (. java.time.format.ResolverStyle -LENIENT))
(clojure.core/defn values {:arglists (quote ([]))} (^"java.lang.Class" [] (. java.time.format.ResolverStyle values)))
(clojure.core/defn value-of {:arglists (quote (["java.lang.String"] ["java.lang.Class" "java.lang.String"]))} (^java.time.format.ResolverStyle [^java.lang.String java-lang-String13429] (. java.time.format.ResolverStyle valueOf java-lang-String13429)) (^java.lang.Enum [^java.lang.Class java-lang-Class13430 ^java.lang.String java-lang-String13431] (. java.time.format.ResolverStyle valueOf java-lang-Class13430 java-lang-String13431)))
(clojure.core/defn ordinal {:arglists (quote (["java.time.format.ResolverStyle"]))} (^java.lang.Integer [^java.time.format.ResolverStyle this13432] (.ordinal this13432)))
(clojure.core/defn to-string {:arglists (quote (["java.time.format.ResolverStyle"]))} (^java.lang.String [^java.time.format.ResolverStyle this13433] (.toString this13433)))
(clojure.core/defn name {:arglists (quote (["java.time.format.ResolverStyle"]))} (^java.lang.String [^java.time.format.ResolverStyle this13434] (.name this13434)))
(clojure.core/defn get-declaring-class {:arglists (quote (["java.time.format.ResolverStyle"]))} (^java.lang.Class [^java.time.format.ResolverStyle this13435] (.declaringClass this13435)))
(clojure.core/defn hash-code {:arglists (quote (["java.time.format.ResolverStyle"]))} (^java.lang.Integer [^java.time.format.ResolverStyle this13436] (.hashCode this13436)))
(clojure.core/defn compare-to {:arglists (quote (["java.time.format.ResolverStyle" "java.lang.Object"] ["java.time.format.ResolverStyle" "java.lang.Enum"]))} (^java.lang.Integer [this13437 G__13438] (.compareTo ^java.time.format.ResolverStyle this13437 G__13438)))
(clojure.core/defn equals {:arglists (quote (["java.time.format.ResolverStyle" "java.lang.Object"]))} (^java.lang.Boolean [^java.time.format.ResolverStyle this13439 ^java.lang.Object java-lang-Object13440] (.equals this13439 java-lang-Object13440)))
