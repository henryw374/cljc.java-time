(ns cljc.java-time.format.sign-style (:require [java.time.format :refer [SignStyle]]) (:refer-clojure :exclude [get range format min max next name resolve short]))
(def exceeds-pad (. java.time.format.SignStyle -EXCEEDS_PAD))
(def normal (. java.time.format.SignStyle -NORMAL))
(def always (. java.time.format.SignStyle -ALWAYS))
(def never (. java.time.format.SignStyle -NEVER))
(def not-negative (. java.time.format.SignStyle -NOT_NEGATIVE))
(clojure.core/defn values {:arglists (quote ([]))} (^"java.lang.Class" [] (. java.time.format.SignStyle values)))
(clojure.core/defn value-of {:arglists (quote (["java.lang.String"] ["java.lang.Class" "java.lang.String"]))} (^java.time.format.SignStyle [^java.lang.String java-lang-String51479] (. java.time.format.SignStyle valueOf java-lang-String51479)) (^java.lang.Enum [^java.lang.Class java-lang-Class51480 ^java.lang.String java-lang-String51481] (. java.time.format.SignStyle valueOf java-lang-Class51480 java-lang-String51481)))
(clojure.core/defn ordinal {:arglists (quote (["java.time.format.SignStyle"]))} (^java.lang.Integer [^java.time.format.SignStyle this51482] (.ordinal this51482)))
(clojure.core/defn to-string {:arglists (quote (["java.time.format.SignStyle"]))} (^java.lang.String [^java.time.format.SignStyle this51483] (.toString this51483)))
(clojure.core/defn name {:arglists (quote (["java.time.format.SignStyle"]))} (^java.lang.String [^java.time.format.SignStyle this51484] (.name this51484)))
(clojure.core/defn get-declaring-class {:arglists (quote (["java.time.format.SignStyle"]))} (^java.lang.Class [^java.time.format.SignStyle this51485] (.declaringClass this51485)))
(clojure.core/defn hash-code {:arglists (quote (["java.time.format.SignStyle"]))} (^java.lang.Integer [^java.time.format.SignStyle this51486] (.hashCode this51486)))
(clojure.core/defn compare-to {:arglists (quote (["java.time.format.SignStyle" "java.lang.Object"] ["java.time.format.SignStyle" "java.lang.Enum"]))} (^java.lang.Integer [this51487 G__51488] (.compareTo ^java.time.format.SignStyle this51487 G__51488)))
(clojure.core/defn equals {:arglists (quote (["java.time.format.SignStyle" "java.lang.Object"]))} (^java.lang.Boolean [^java.time.format.SignStyle this51489 ^java.lang.Object java-lang-Object51490] (.equals this51489 java-lang-Object51490)))
