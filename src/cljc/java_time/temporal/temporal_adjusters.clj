(ns cljc.java-time.temporal.temporal-adjusters (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal TemporalAdjusters]))
(clojure.core/defn next {:arglists (quote (["java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.time.DayOfWeek java-time-DayOfWeek8576] (java.time.temporal.TemporalAdjusters/next java-time-DayOfWeek8576)))
(clojure.core/defn next-or-same {:arglists (quote (["java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.time.DayOfWeek java-time-DayOfWeek8577] (java.time.temporal.TemporalAdjusters/nextOrSame java-time-DayOfWeek8577)))
(clojure.core/defn first-day-of-next-month {:arglists (quote ([]))} (^java.time.temporal.TemporalAdjuster [] (java.time.temporal.TemporalAdjusters/firstDayOfNextMonth)))
(clojure.core/defn first-day-of-month {:arglists (quote ([]))} (^java.time.temporal.TemporalAdjuster [] (java.time.temporal.TemporalAdjusters/firstDayOfMonth)))
(clojure.core/defn first-day-of-year {:arglists (quote ([]))} (^java.time.temporal.TemporalAdjuster [] (java.time.temporal.TemporalAdjusters/firstDayOfYear)))
(clojure.core/defn of-date-adjuster {:arglists (quote (["java.util.function.UnaryOperator"]))} (^java.time.temporal.TemporalAdjuster [^java.util.function.UnaryOperator java-util-function-UnaryOperator8578] (java.time.temporal.TemporalAdjusters/ofDateAdjuster java-util-function-UnaryOperator8578)))
(clojure.core/defn last-day-of-year {:arglists (quote ([]))} (^java.time.temporal.TemporalAdjuster [] (java.time.temporal.TemporalAdjusters/lastDayOfYear)))
(clojure.core/defn first-in-month {:arglists (quote (["java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.time.DayOfWeek java-time-DayOfWeek8579] (java.time.temporal.TemporalAdjusters/firstInMonth java-time-DayOfWeek8579)))
(clojure.core/defn previous-or-same {:arglists (quote (["java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.time.DayOfWeek java-time-DayOfWeek8580] (java.time.temporal.TemporalAdjusters/previousOrSame java-time-DayOfWeek8580)))
(clojure.core/defn previous {:arglists (quote (["java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.time.DayOfWeek java-time-DayOfWeek8581] (java.time.temporal.TemporalAdjusters/previous java-time-DayOfWeek8581)))
(clojure.core/defn last-day-of-month {:arglists (quote ([]))} (^java.time.temporal.TemporalAdjuster [] (java.time.temporal.TemporalAdjusters/lastDayOfMonth)))
(clojure.core/defn last-in-month {:arglists (quote (["java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.time.DayOfWeek java-time-DayOfWeek8582] (java.time.temporal.TemporalAdjusters/lastInMonth java-time-DayOfWeek8582)))
(clojure.core/defn first-day-of-next-year {:arglists (quote ([]))} (^java.time.temporal.TemporalAdjuster [] (java.time.temporal.TemporalAdjusters/firstDayOfNextYear)))
(clojure.core/defn day-of-week-in-month {:arglists (quote (["int" "java.time.DayOfWeek"]))} (^java.time.temporal.TemporalAdjuster [^java.lang.Integer int8583 ^java.time.DayOfWeek java-time-DayOfWeek8584] (java.time.temporal.TemporalAdjusters/dayOfWeekInMonth int8583 java-time-DayOfWeek8584)))
