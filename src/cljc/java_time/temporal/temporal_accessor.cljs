(ns cljc.java-time.temporal.temporal-accessor (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time.temporal :refer [TemporalAccessor]]))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.TemporalAccessor this13027 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13028] (.get this13027 java-time-temporal-TemporalField13028)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.TemporalAccessor this13029 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13030] (.getLong this13029 java-time-temporal-TemporalField13030)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.TemporalAccessor this13031 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery13032] (.query this13031 java-time-temporal-TemporalQuery13032)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [^java.time.temporal.TemporalAccessor this13033 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13034] (.isSupported this13033 java-time-temporal-TemporalField13034)))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.TemporalAccessor this13035 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13036] (.range this13035 java-time-temporal-TemporalField13036)))
