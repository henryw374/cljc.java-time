(ns cljc.java-time.temporal.temporal-amount (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time.temporal :refer [TemporalAmount]]))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.TemporalUnit"]))} (^long [^js/JSJoda.TemporalAmount this5668 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit5669] (.get this5668 java-time-temporal-TemporalUnit5669)))
(clojure.core/defn add-to {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^js/JSJoda.Temporal [^js/JSJoda.TemporalAmount this5670 ^js/JSJoda.Temporal java-time-temporal-Temporal5671] (.addTo this5670 java-time-temporal-Temporal5671)))
(clojure.core/defn subtract-from {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^js/JSJoda.Temporal [^js/JSJoda.TemporalAmount this5672 ^js/JSJoda.Temporal java-time-temporal-Temporal5673] (.subtractFrom this5672 java-time-temporal-Temporal5673)))
(clojure.core/defn get-units {:arglists (quote (["java.time.temporal.TemporalAmount"]))} (^java.util.List [^js/JSJoda.TemporalAmount this5674] (.units this5674)))
