(ns cljc.java-time.temporal.temporal-amount (:require [java.time.temporal :refer [TemporalAmount]]) (:refer-clojure :exclude [get range format min max next name resolve short]))
(clojure.core/defn get-units {:arglists (quote (["java.time.temporal.TemporalAmount"]))} (^java.util.List [^java.time.temporal.TemporalAmount this50882] (.units this50882)))
(clojure.core/defn add-to {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this50883 ^java.time.temporal.Temporal java-time-temporal-Temporal50884] (.addTo this50883 java-time-temporal-Temporal50884)))
(clojure.core/defn subtract-from {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this50885 ^java.time.temporal.Temporal java-time-temporal-Temporal50886] (.subtractFrom this50885 java-time-temporal-Temporal50886)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.TemporalAmount this50887 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit50888] (.get this50887 java-time-temporal-TemporalUnit50888)))
