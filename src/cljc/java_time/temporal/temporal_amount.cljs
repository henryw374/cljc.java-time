(ns cljc.java-time.temporal.temporal-amount (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time.temporal :refer [TemporalAmount]]))
(clojure.core/defn get-units {:arglists (quote (["java.time.temporal.TemporalAmount"]))} (^java.util.List [^js/JSJoda.TemporalAmount this8711] (.units this8711)))
(clojure.core/defn add-to {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^js/JSJoda.Temporal [^js/JSJoda.TemporalAmount this8712 ^js/JSJoda.Temporal java-time-temporal-Temporal8713] (.addTo this8712 java-time-temporal-Temporal8713)))
(clojure.core/defn subtract-from {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^js/JSJoda.Temporal [^js/JSJoda.TemporalAmount this8714 ^js/JSJoda.Temporal java-time-temporal-Temporal8715] (.subtractFrom this8714 java-time-temporal-Temporal8715)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.TemporalUnit"]))} (^long [^js/JSJoda.TemporalAmount this8716 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit8717] (.get this8716 java-time-temporal-TemporalUnit8717)))
