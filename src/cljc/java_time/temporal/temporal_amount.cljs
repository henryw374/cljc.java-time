(ns cljc.java-time.temporal.temporal-amount (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time.temporal :refer [TemporalAmount]]))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.TemporalAmount this12890 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit12891] (.get this12890 java-time-temporal-TemporalUnit12891)))
(clojure.core/defn add-to {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this12892 ^java.time.temporal.Temporal java-time-temporal-Temporal12893] (.addTo this12892 java-time-temporal-Temporal12893)))
(clojure.core/defn subtract-from {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this12894 ^java.time.temporal.Temporal java-time-temporal-Temporal12895] (.subtractFrom this12894 java-time-temporal-Temporal12895)))
(clojure.core/defn get-units {:arglists (quote (["java.time.temporal.TemporalAmount"]))} (^java.util.List [^java.time.temporal.TemporalAmount this12896] (.units this12896)))
