(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time.temporal :refer [Temporal]]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.Temporal this12855 ^java.time.temporal.TemporalField java-time-temporal-TemporalField12856] (.range this12855 java-time-temporal-TemporalField12856)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this12857 ^long long12858 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit12859] (.plus this12857 long12858 java-time-temporal-TemporalUnit12859)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this12860 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount12861] (.plus this12860 java-time-temporal-TemporalAmount12861)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.Temporal this12862 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery12863] (.query this12862 java-time-temporal-TemporalQuery12863)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this12864 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount12865] (.minus this12864 java-time-temporal-TemporalAmount12865)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this12866 ^long long12867 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit12868] (.minus this12866 long12867 java-time-temporal-TemporalUnit12868)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.Temporal this12869 ^java.time.temporal.TemporalField java-time-temporal-TemporalField12870] (.getLong this12869 java-time-temporal-TemporalField12870)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.Temporal this12871 ^java.time.temporal.Temporal java-time-temporal-Temporal12872 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit12873] (.until this12871 java-time-temporal-Temporal12872 java-time-temporal-TemporalUnit12873)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [this12874 G__12875] (.isSupported ^java.time.temporal.Temporal this12874 G__12875)))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this12876 ^java.time.temporal.TemporalAdjuster java-time-temporal-TemporalAdjuster12877] (.with this12876 java-time-temporal-TemporalAdjuster12877)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this12878 ^java.time.temporal.TemporalField java-time-temporal-TemporalField12879 ^long long12880] (.with this12878 java-time-temporal-TemporalField12879 long12880)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.Temporal this12881 ^java.time.temporal.TemporalField java-time-temporal-TemporalField12882] (.get this12881 java-time-temporal-TemporalField12882)))
