(ns cljc.java-time.temporal.temporal (:require [java.time.temporal :refer [Temporal]]) (:refer-clojure :exclude [get range format min max next name resolve short]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.Temporal this50847 ^java.time.temporal.TemporalField java-time-temporal-TemporalField50848] (.range this50847 java-time-temporal-TemporalField50848)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this50849 ^long long50850 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit50851] (.plus this50849 long50850 java-time-temporal-TemporalUnit50851)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this50852 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount50853] (.plus this50852 java-time-temporal-TemporalAmount50853)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.Temporal this50854 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery50855] (.query this50854 java-time-temporal-TemporalQuery50855)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this50856 ^long long50857 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit50858] (.minus this50856 long50857 java-time-temporal-TemporalUnit50858)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this50859 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount50860] (.minus this50859 java-time-temporal-TemporalAmount50860)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.Temporal this50861 ^java.time.temporal.TemporalField java-time-temporal-TemporalField50862] (.getLong this50861 java-time-temporal-TemporalField50862)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.Temporal this50863 ^java.time.temporal.Temporal java-time-temporal-Temporal50864 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit50865] (.until this50863 java-time-temporal-Temporal50864 java-time-temporal-TemporalUnit50865)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [this50866 G__50867] (.isSupported ^java.time.temporal.Temporal this50866 G__50867)))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this50868 ^java.time.temporal.TemporalField java-time-temporal-TemporalField50869 ^long long50870] (.with this50868 java-time-temporal-TemporalField50869 long50870)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this50871 ^java.time.temporal.TemporalAdjuster java-time-temporal-TemporalAdjuster50872] (.with this50871 java-time-temporal-TemporalAdjuster50872)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.Temporal this50873 ^java.time.temporal.TemporalField java-time-temporal-TemporalField50874] (.get this50873 java-time-temporal-TemporalField50874)))
