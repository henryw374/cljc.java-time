(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time.temporal :refer [Temporal]]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^js/JSJoda.ValueRange [^js/JSJoda.Temporal this8622 ^js/JSJoda.TemporalField java-time-temporal-TemporalField8623] (.range this8622 java-time-temporal-TemporalField8623)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this8624 ^long long8625 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit8626] (.plus this8624 long8625 java-time-temporal-TemporalUnit8626)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this8627 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount8628] (.plus this8627 java-time-temporal-TemporalAmount8628)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^js/JSJoda.Temporal this8629 ^js/JSJoda.TemporalQuery java-time-temporal-TemporalQuery8630] (.query this8629 java-time-temporal-TemporalQuery8630)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this8631 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount8632] (.minus this8631 java-time-temporal-TemporalAmount8632)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this8633 ^long long8634 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit8635] (.minus this8633 long8634 java-time-temporal-TemporalUnit8635)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^js/JSJoda.Temporal this8636 ^js/JSJoda.TemporalField java-time-temporal-TemporalField8637] (.getLong this8636 java-time-temporal-TemporalField8637)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^js/JSJoda.Temporal this8638 ^js/JSJoda.Temporal java-time-temporal-Temporal8639 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit8640] (.until this8638 java-time-temporal-Temporal8639 java-time-temporal-TemporalUnit8640)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^boolean [this8641 G__8642] (.isSupported ^js/JSJoda.Temporal this8641 G__8642)))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this8643 ^js/JSJoda.TemporalAdjuster java-time-temporal-TemporalAdjuster8644] (.with this8643 java-time-temporal-TemporalAdjuster8644)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this8645 ^js/JSJoda.TemporalField java-time-temporal-TemporalField8646 ^long long8647] (.with this8645 java-time-temporal-TemporalField8646 long8647)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^int [^js/JSJoda.Temporal this8648 ^js/JSJoda.TemporalField java-time-temporal-TemporalField8649] (.get this8648 java-time-temporal-TemporalField8649)))
