(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time.temporal :refer [Temporal]]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^js/JSJoda.ValueRange [^js/JSJoda.Temporal this5633 ^js/JSJoda.TemporalField java-time-temporal-TemporalField5634] (.range this5633 java-time-temporal-TemporalField5634)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this5635 ^long long5636 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit5637] (.plus this5635 long5636 java-time-temporal-TemporalUnit5637)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this5638 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount5639] (.plus this5638 java-time-temporal-TemporalAmount5639)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^js/JSJoda.Temporal this5640 ^js/JSJoda.TemporalQuery java-time-temporal-TemporalQuery5641] (.query this5640 java-time-temporal-TemporalQuery5641)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this5642 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount5643] (.minus this5642 java-time-temporal-TemporalAmount5643)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this5644 ^long long5645 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit5646] (.minus this5644 long5645 java-time-temporal-TemporalUnit5646)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^js/JSJoda.Temporal this5647 ^js/JSJoda.TemporalField java-time-temporal-TemporalField5648] (.getLong this5647 java-time-temporal-TemporalField5648)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^js/JSJoda.Temporal this5649 ^js/JSJoda.Temporal java-time-temporal-Temporal5650 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit5651] (.until this5649 java-time-temporal-Temporal5650 java-time-temporal-TemporalUnit5651)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^boolean [this5652 G__5653] (.isSupported ^js/JSJoda.Temporal this5652 G__5653)))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this5654 ^js/JSJoda.TemporalAdjuster java-time-temporal-TemporalAdjuster5655] (.with this5654 java-time-temporal-TemporalAdjuster5655)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this5656 ^js/JSJoda.TemporalField java-time-temporal-TemporalField5657 ^long long5658] (.with this5656 java-time-temporal-TemporalField5657 long5658)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^int [^js/JSJoda.Temporal this5659 ^js/JSJoda.TemporalField java-time-temporal-TemporalField5660] (.get this5659 java-time-temporal-TemporalField5660)))
