(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [goog.object] [java.time.temporal :refer [Temporal]]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^js/JSJoda.ValueRange [^js/JSJoda.Temporal this15151 ^js/JSJoda.TemporalField java-time-temporal-TemporalField15152] (.range this15151 java-time-temporal-TemporalField15152)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this15153 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount15154] (.plus this15153 java-time-temporal-TemporalAmount15154)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this15155 ^long long15156 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit15157] (.plus this15155 long15156 java-time-temporal-TemporalUnit15157)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^js/JSJoda.Temporal this15158 ^js/JSJoda.TemporalQuery java-time-temporal-TemporalQuery15159] (.query this15158 java-time-temporal-TemporalQuery15159)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this15160 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount15161] (.minus this15160 java-time-temporal-TemporalAmount15161)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this15162 ^long long15163 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit15164] (.minus this15162 long15163 java-time-temporal-TemporalUnit15164)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^js/JSJoda.Temporal this15165 ^js/JSJoda.TemporalField java-time-temporal-TemporalField15166] (.getLong this15165 java-time-temporal-TemporalField15166)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^js/JSJoda.Temporal this15167 ^js/JSJoda.Temporal java-time-temporal-Temporal15168 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit15169] (.until this15167 java-time-temporal-Temporal15168 java-time-temporal-TemporalUnit15169)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^boolean [this15170 G__15171] (.isSupported ^js/JSJoda.Temporal this15170 G__15171)))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this15172 ^js/JSJoda.TemporalField java-time-temporal-TemporalField15173 ^long long15174] (.with this15172 java-time-temporal-TemporalField15173 long15174)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this15175 ^js/JSJoda.TemporalAdjuster java-time-temporal-TemporalAdjuster15176] (.with this15175 java-time-temporal-TemporalAdjuster15176)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^int [^js/JSJoda.Temporal this15177 ^js/JSJoda.TemporalField java-time-temporal-TemporalField15178] (.get this15177 java-time-temporal-TemporalField15178)))
