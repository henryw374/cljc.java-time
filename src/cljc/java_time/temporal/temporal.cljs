(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time.temporal :refer [Temporal]]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^js/JSJoda.ValueRange [^js/JSJoda.Temporal this61338 ^js/JSJoda.TemporalField java-time-temporal-TemporalField61339] (.range this61338 java-time-temporal-TemporalField61339)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this61340 ^long long61341 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit61342] (.plus this61340 long61341 java-time-temporal-TemporalUnit61342)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this61343 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount61344] (.plus this61343 java-time-temporal-TemporalAmount61344)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^js/JSJoda.Temporal this61345 ^js/JSJoda.TemporalQuery java-time-temporal-TemporalQuery61346] (.query this61345 java-time-temporal-TemporalQuery61346)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this61347 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount61348] (.minus this61347 java-time-temporal-TemporalAmount61348)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this61349 ^long long61350 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit61351] (.minus this61349 long61350 java-time-temporal-TemporalUnit61351)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^js/JSJoda.Temporal this61352 ^js/JSJoda.TemporalField java-time-temporal-TemporalField61353] (.getLong this61352 java-time-temporal-TemporalField61353)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^js/JSJoda.Temporal this61354 ^js/JSJoda.Temporal java-time-temporal-Temporal61355 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit61356] (.until this61354 java-time-temporal-Temporal61355 java-time-temporal-TemporalUnit61356)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^boolean [this61357 G__61358] (.isSupported ^js/JSJoda.Temporal this61357 G__61358)))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this61359 ^js/JSJoda.TemporalAdjuster java-time-temporal-TemporalAdjuster61360] (.with this61359 java-time-temporal-TemporalAdjuster61360)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this61361 ^js/JSJoda.TemporalField java-time-temporal-TemporalField61362 ^long long61363] (.with this61361 java-time-temporal-TemporalField61362 long61363)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^int [^js/JSJoda.Temporal this61364 ^js/JSJoda.TemporalField java-time-temporal-TemporalField61365] (.get this61364 java-time-temporal-TemporalField61365)))
