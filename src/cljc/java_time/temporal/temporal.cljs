(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time.temporal :refer [Temporal]]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^js/JSJoda.ValueRange [^js/JSJoda.Temporal this5634 ^js/JSJoda.TemporalField java-time-temporal-TemporalField5635] (.range this5634 java-time-temporal-TemporalField5635)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this5636 ^long long5637 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit5638] (.plus this5636 long5637 java-time-temporal-TemporalUnit5638)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this5639 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount5640] (.plus this5639 java-time-temporal-TemporalAmount5640)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^js/JSJoda.Temporal this5641 ^js/JSJoda.TemporalQuery java-time-temporal-TemporalQuery5642] (.query this5641 java-time-temporal-TemporalQuery5642)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this5643 ^long long5644 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit5645] (.minus this5643 long5644 java-time-temporal-TemporalUnit5645)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this5646 ^js/JSJoda.TemporalAmount java-time-temporal-TemporalAmount5647] (.minus this5646 java-time-temporal-TemporalAmount5647)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^js/JSJoda.Temporal this5648 ^js/JSJoda.TemporalField java-time-temporal-TemporalField5649] (.getLong this5648 java-time-temporal-TemporalField5649)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^js/JSJoda.Temporal this5650 ^js/JSJoda.Temporal java-time-temporal-Temporal5651 ^js/JSJoda.TemporalUnit java-time-temporal-TemporalUnit5652] (.until this5650 java-time-temporal-Temporal5651 java-time-temporal-TemporalUnit5652)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^boolean [this5653 G__5654] (.isSupported ^js/JSJoda.Temporal this5653 G__5654)))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"]))} (^js/JSJoda.Temporal [^js/JSJoda.Temporal this5655 ^js/JSJoda.TemporalField java-time-temporal-TemporalField5656 ^long long5657] (.with this5655 java-time-temporal-TemporalField5656 long5657)) (^js/JSJoda.Temporal [^js/JSJoda.Temporal this5658 ^js/JSJoda.TemporalAdjuster java-time-temporal-TemporalAdjuster5659] (.with this5658 java-time-temporal-TemporalAdjuster5659)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^int [^js/JSJoda.Temporal this5660 ^js/JSJoda.TemporalField java-time-temporal-TemporalField5661] (.get this5660 java-time-temporal-TemporalField5661)))
