(ns cljc.java-time.temporal.week-fields (:refer-clojure :exclude [abs get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal WeekFields]))
(def sunday-start java.time.temporal.WeekFields/SUNDAY_START)
(def iso java.time.temporal.WeekFields/ISO)
(def week-based-years java.time.temporal.WeekFields/WEEK_BASED_YEARS)
(clojure.core/defn day-of-week {:arglists (quote (["java.time.temporal.WeekFields"]))} (^java.time.temporal.TemporalField [^java.time.temporal.WeekFields this15692] (.dayOfWeek this15692)))
(clojure.core/defn of {:arglists (quote (["java.util.Locale"] ["java.time.DayOfWeek" "int"]))} (^java.time.temporal.WeekFields [^java.util.Locale java-util-Locale15693] (java.time.temporal.WeekFields/of java-util-Locale15693)) (^java.time.temporal.WeekFields [^java.time.DayOfWeek java-time-DayOfWeek15694 ^java.lang.Integer int15695] (java.time.temporal.WeekFields/of java-time-DayOfWeek15694 int15695)))
(clojure.core/defn get-first-day-of-week {:arglists (quote (["java.time.temporal.WeekFields"]))} (^java.time.DayOfWeek [^java.time.temporal.WeekFields this15696] (.getFirstDayOfWeek this15696)))
(clojure.core/defn to-string {:arglists (quote (["java.time.temporal.WeekFields"]))} (^java.lang.String [^java.time.temporal.WeekFields this15697] (.toString this15697)))
(clojure.core/defn week-based-year {:arglists (quote (["java.time.temporal.WeekFields"]))} (^java.time.temporal.TemporalField [^java.time.temporal.WeekFields this15698] (.weekBasedYear this15698)))
(clojure.core/defn week-of-year {:arglists (quote (["java.time.temporal.WeekFields"]))} (^java.time.temporal.TemporalField [^java.time.temporal.WeekFields this15699] (.weekOfYear this15699)))
(clojure.core/defn week-of-week-based-year {:arglists (quote (["java.time.temporal.WeekFields"]))} (^java.time.temporal.TemporalField [^java.time.temporal.WeekFields this15700] (.weekOfWeekBasedYear this15700)))
(clojure.core/defn week-of-month {:arglists (quote (["java.time.temporal.WeekFields"]))} (^java.time.temporal.TemporalField [^java.time.temporal.WeekFields this15701] (.weekOfMonth this15701)))
(clojure.core/defn hash-code {:arglists (quote (["java.time.temporal.WeekFields"]))} (^java.lang.Integer [^java.time.temporal.WeekFields this15702] (.hashCode this15702)))
(clojure.core/defn get-minimal-days-in-first-week {:arglists (quote (["java.time.temporal.WeekFields"]))} (^java.lang.Integer [^java.time.temporal.WeekFields this15703] (.getMinimalDaysInFirstWeek this15703)))
(clojure.core/defn equals {:arglists (quote (["java.time.temporal.WeekFields" "java.lang.Object"]))} (^java.lang.Boolean [^java.time.temporal.WeekFields this15704 ^java.lang.Object java-lang-Object15705] (.equals this15704 java-lang-Object15705)))
