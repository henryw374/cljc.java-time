(ns cljc.java-time.temporal.temporal-accessor (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal TemporalAccessor]))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.TemporalAccessor this5795 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5796] (.get this5795 java-time-temporal-TemporalField5796)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.TemporalAccessor this5797 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5798] (.getLong this5797 java-time-temporal-TemporalField5798)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.TemporalAccessor this5799 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery5800] (.query this5799 java-time-temporal-TemporalQuery5800)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [^java.time.temporal.TemporalAccessor this5801 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5802] (.isSupported this5801 java-time-temporal-TemporalField5802)))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.TemporalAccessor this5803 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5804] (.range this5803 java-time-temporal-TemporalField5804)))
