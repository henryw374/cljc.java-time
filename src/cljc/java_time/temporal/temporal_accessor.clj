(ns cljc.java-time.temporal.temporal-accessor (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal TemporalAccessor]))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.TemporalAccessor this13017 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13018] (.get this13017 java-time-temporal-TemporalField13018)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.TemporalAccessor this13019 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13020] (.getLong this13019 java-time-temporal-TemporalField13020)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.TemporalAccessor this13021 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery13022] (.query this13021 java-time-temporal-TemporalQuery13022)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [^java.time.temporal.TemporalAccessor this13023 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13024] (.isSupported this13023 java-time-temporal-TemporalField13024)))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.TemporalAccessor this13025 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13026] (.range this13025 java-time-temporal-TemporalField13026)))
