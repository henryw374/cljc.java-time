(ns cljc.java-time.temporal.temporal-accessor (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal TemporalAccessor]))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.TemporalAccessor this61500 ^java.time.temporal.TemporalField java-time-temporal-TemporalField61501] (.get this61500 java-time-temporal-TemporalField61501)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.TemporalAccessor this61502 ^java.time.temporal.TemporalField java-time-temporal-TemporalField61503] (.getLong this61502 java-time-temporal-TemporalField61503)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.TemporalAccessor this61504 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery61505] (.query this61504 java-time-temporal-TemporalQuery61505)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [^java.time.temporal.TemporalAccessor this61506 ^java.time.temporal.TemporalField java-time-temporal-TemporalField61507] (.isSupported this61506 java-time-temporal-TemporalField61507)))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.TemporalAccessor this61508 ^java.time.temporal.TemporalField java-time-temporal-TemporalField61509] (.range this61508 java-time-temporal-TemporalField61509)))
