(ns cljc.java-time.temporal.temporal-accessor (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal TemporalAccessor]))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.TemporalAccessor this5796 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5797] (.get this5796 java-time-temporal-TemporalField5797)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.TemporalAccessor this5798 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5799] (.getLong this5798 java-time-temporal-TemporalField5799)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.TemporalAccessor this5800 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery5801] (.query this5800 java-time-temporal-TemporalQuery5801)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [^java.time.temporal.TemporalAccessor this5802 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5803] (.isSupported this5802 java-time-temporal-TemporalField5803)))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.TemporalAccessor this5804 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5805] (.range this5804 java-time-temporal-TemporalField5805)))
