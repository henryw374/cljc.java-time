(ns cljc.java-time.temporal.temporal-field (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [java.time.temporal :refer [TemporalField]]))
(clojure.core/defn get-range-unit {:arglists (quote (["java.time.temporal.TemporalField"]))} (^js/JSJoda.TemporalUnit [^js/JSJoda.TemporalField this8971] (.rangeUnit this8971)))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.TemporalField"]))} (^js/JSJoda.ValueRange [^js/JSJoda.TemporalField this8972] (.range this8972)))
(clojure.core/defn resolve {:arglists (quote (["java.time.temporal.TemporalField" "java.util.Map" "java.time.temporal.TemporalAccessor" "java.time.format.ResolverStyle"]))} (^js/JSJoda.TemporalAccessor [^js/JSJoda.TemporalField this8973 ^java.util.Map java-util-Map8974 ^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor8975 ^js/JSJoda.ResolverStyle java-time-format-ResolverStyle8976] (.resolve this8973 java-util-Map8974 java-time-temporal-TemporalAccessor8975 java-time-format-ResolverStyle8976)))
(clojure.core/defn get-base-unit {:arglists (quote (["java.time.temporal.TemporalField"]))} (^js/JSJoda.TemporalUnit [^js/JSJoda.TemporalField this8977] (.baseUnit this8977)))
(clojure.core/defn to-string {:arglists (quote (["java.time.temporal.TemporalField"]))} (^java.lang.String [^js/JSJoda.TemporalField this8978] (.toString this8978)))
(clojure.core/defn is-date-based {:arglists (quote (["java.time.temporal.TemporalField"]))} (^boolean [^js/JSJoda.TemporalField this8979] (.isDateBased this8979)))
(clojure.core/defn get-display-name {:arglists (quote (["java.time.temporal.TemporalField" "java.util.Locale"]))} (^java.lang.String [^js/JSJoda.TemporalField this8980 ^java.util.Locale java-util-Locale8981] (.displayName this8980 java-util-Locale8981)))
(clojure.core/defn is-supported-by {:arglists (quote (["java.time.temporal.TemporalField" "java.time.temporal.TemporalAccessor"]))} (^boolean [^js/JSJoda.TemporalField this8982 ^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor8983] (.isSupportedBy this8982 java-time-temporal-TemporalAccessor8983)))
(clojure.core/defn range-refined-by {:arglists (quote (["java.time.temporal.TemporalField" "java.time.temporal.TemporalAccessor"]))} (^js/JSJoda.ValueRange [^js/JSJoda.TemporalField this8984 ^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor8985] (.rangeRefinedBy this8984 java-time-temporal-TemporalAccessor8985)))
(clojure.core/defn adjust-into {:arglists (quote (["java.time.temporal.TemporalField" "java.time.temporal.Temporal" "long"]))} (^js/JSJoda.Temporal [^js/JSJoda.TemporalField this8986 ^js/JSJoda.Temporal java-time-temporal-Temporal8987 ^long long8988] (.adjustInto this8986 java-time-temporal-Temporal8987 long8988)))
(clojure.core/defn get-from {:arglists (quote (["java.time.temporal.TemporalField" "java.time.temporal.TemporalAccessor"]))} (^long [^js/JSJoda.TemporalField this8989 ^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor8990] (.from this8989 java-time-temporal-TemporalAccessor8990)))
(clojure.core/defn is-time-based {:arglists (quote (["java.time.temporal.TemporalField"]))} (^boolean [^js/JSJoda.TemporalField this8991] (.isTimeBased this8991)))
