(ns cljc.java-time.temporal.temporal-field (:refer-clojure :exclude [abs get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [goog.object] [java.time.temporal :refer [TemporalField]]))
(clojure.core/defn get-range-unit {:arglists (quote (["java.time.temporal.TemporalField"]))} (^js/JSJoda.TemporalUnit [^js/JSJoda.TemporalField this15853] (.rangeUnit this15853)))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.TemporalField"]))} (^js/JSJoda.ValueRange [^js/JSJoda.TemporalField this15854] (.range this15854)))
(clojure.core/defn resolve {:arglists (quote (["java.time.temporal.TemporalField" "java.util.Map" "java.time.temporal.TemporalAccessor" "java.time.format.ResolverStyle"]))} (^js/JSJoda.TemporalAccessor [^js/JSJoda.TemporalField this15855 ^java.util.Map java-util-Map15856 ^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor15857 ^js/JSJoda.ResolverStyle java-time-format-ResolverStyle15858] (.resolve this15855 java-util-Map15856 java-time-temporal-TemporalAccessor15857 java-time-format-ResolverStyle15858)))
(clojure.core/defn get-base-unit {:arglists (quote (["java.time.temporal.TemporalField"]))} (^js/JSJoda.TemporalUnit [^js/JSJoda.TemporalField this15859] (.baseUnit this15859)))
(clojure.core/defn to-string {:arglists (quote (["java.time.temporal.TemporalField"]))} (^java.lang.String [^js/JSJoda.TemporalField this15860] (.toString this15860)))
(clojure.core/defn is-date-based {:arglists (quote (["java.time.temporal.TemporalField"]))} (^boolean [^js/JSJoda.TemporalField this15861] (.isDateBased this15861)))
(clojure.core/defn get-display-name {:arglists (quote (["java.time.temporal.TemporalField" "java.util.Locale"]))} (^java.lang.String [^js/JSJoda.TemporalField this15862 ^java.util.Locale java-util-Locale15863] (.displayName this15862 java-util-Locale15863)))
(clojure.core/defn is-supported-by {:arglists (quote (["java.time.temporal.TemporalField" "java.time.temporal.TemporalAccessor"]))} (^boolean [^js/JSJoda.TemporalField this15864 ^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor15865] (.isSupportedBy this15864 java-time-temporal-TemporalAccessor15865)))
(clojure.core/defn range-refined-by {:arglists (quote (["java.time.temporal.TemporalField" "java.time.temporal.TemporalAccessor"]))} (^js/JSJoda.ValueRange [^js/JSJoda.TemporalField this15866 ^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor15867] (.rangeRefinedBy this15866 java-time-temporal-TemporalAccessor15867)))
(clojure.core/defn adjust-into {:arglists (quote (["java.time.temporal.TemporalField" "java.time.temporal.Temporal" "long"]))} (^js/JSJoda.Temporal [^js/JSJoda.TemporalField this15868 ^js/JSJoda.Temporal java-time-temporal-Temporal15869 ^long long15870] (.adjustInto this15868 java-time-temporal-Temporal15869 long15870)))
(clojure.core/defn get-from {:arglists (quote (["java.time.temporal.TemporalField" "java.time.temporal.TemporalAccessor"]))} (^long [^js/JSJoda.TemporalField this15871 ^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor15872] (.from this15871 java-time-temporal-TemporalAccessor15872)))
(clojure.core/defn is-time-based {:arglists (quote (["java.time.temporal.TemporalField"]))} (^boolean [^js/JSJoda.TemporalField this15873] (.isTimeBased this15873)))
