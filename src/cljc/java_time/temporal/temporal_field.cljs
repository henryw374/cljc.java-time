(ns cljc.java-time.temporal.temporal-field (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness] [goog.object] [java.time.temporal :refer [TemporalField]]))
(clojure.core/defn get-range-unit {:arglists (quote (["java.time.temporal.TemporalField"]))} (^js/JSJoda.TemporalUnit [^js/JSJoda.TemporalField this15474] (.rangeUnit this15474)))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.TemporalField"]))} (^js/JSJoda.ValueRange [^js/JSJoda.TemporalField this15475] (.range this15475)))
(clojure.core/defn resolve {:arglists (quote (["java.time.temporal.TemporalField" "java.util.Map" "java.time.temporal.TemporalAccessor" "java.time.format.ResolverStyle"]))} (^js/JSJoda.TemporalAccessor [^js/JSJoda.TemporalField this15476 ^java.util.Map java-util-Map15477 ^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor15478 ^js/JSJoda.ResolverStyle java-time-format-ResolverStyle15479] (.resolve this15476 java-util-Map15477 java-time-temporal-TemporalAccessor15478 java-time-format-ResolverStyle15479)))
(clojure.core/defn get-base-unit {:arglists (quote (["java.time.temporal.TemporalField"]))} (^js/JSJoda.TemporalUnit [^js/JSJoda.TemporalField this15480] (.baseUnit this15480)))
(clojure.core/defn to-string {:arglists (quote (["java.time.temporal.TemporalField"]))} (^java.lang.String [^js/JSJoda.TemporalField this15481] (.toString this15481)))
(clojure.core/defn is-date-based {:arglists (quote (["java.time.temporal.TemporalField"]))} (^boolean [^js/JSJoda.TemporalField this15482] (.isDateBased this15482)))
(clojure.core/defn get-display-name {:arglists (quote (["java.time.temporal.TemporalField" "java.util.Locale"]))} (^java.lang.String [^js/JSJoda.TemporalField this15483 ^java.util.Locale java-util-Locale15484] (.displayName this15483 java-util-Locale15484)))
(clojure.core/defn is-supported-by {:arglists (quote (["java.time.temporal.TemporalField" "java.time.temporal.TemporalAccessor"]))} (^boolean [^js/JSJoda.TemporalField this15485 ^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor15486] (.isSupportedBy this15485 java-time-temporal-TemporalAccessor15486)))
(clojure.core/defn range-refined-by {:arglists (quote (["java.time.temporal.TemporalField" "java.time.temporal.TemporalAccessor"]))} (^js/JSJoda.ValueRange [^js/JSJoda.TemporalField this15487 ^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor15488] (.rangeRefinedBy this15487 java-time-temporal-TemporalAccessor15488)))
(clojure.core/defn adjust-into {:arglists (quote (["java.time.temporal.TemporalField" "java.time.temporal.Temporal" "long"]))} (^js/JSJoda.Temporal [^js/JSJoda.TemporalField this15489 ^js/JSJoda.Temporal java-time-temporal-Temporal15490 ^long long15491] (.adjustInto this15489 java-time-temporal-Temporal15490 long15491)))
(clojure.core/defn get-from {:arglists (quote (["java.time.temporal.TemporalField" "java.time.temporal.TemporalAccessor"]))} (^long [^js/JSJoda.TemporalField this15492 ^js/JSJoda.TemporalAccessor java-time-temporal-TemporalAccessor15493] (.from this15492 java-time-temporal-TemporalAccessor15493)))
(clojure.core/defn is-time-based {:arglists (quote (["java.time.temporal.TemporalField"]))} (^boolean [^js/JSJoda.TemporalField this15494] (.isTimeBased this15494)))
