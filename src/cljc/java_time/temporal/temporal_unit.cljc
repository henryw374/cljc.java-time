(ns cljc.java-time.temporal.temporal-unit (:require [cljs.java-time.interop :as jti] #? (:cljs [java.time.temporal :refer [TemporalUnit]])) (:refer-clojure :exclude [get range format min max next name resolve]) #? (:clj (:import [java.time.temporal TemporalUnit])))
(clojure.core/defn to-string {:arglists (quote (["java.time.temporal.TemporalUnit"]))} (^java.lang.String [^java.time.temporal.TemporalUnit this13595] (.toString this13595)))
(clojure.core/defn is-supported-by {:arglists (quote (["java.time.temporal.TemporalUnit" "java.time.temporal.Temporal"]))} (^java.lang.Boolean [^java.time.temporal.TemporalUnit this13596 ^java.time.temporal.Temporal java-time-temporal-Temporal13597] (.isSupportedBy this13596 java-time-temporal-Temporal13597)))
(clojure.core/defn is-time-based {:arglists (quote (["java.time.temporal.TemporalUnit"]))} (^java.lang.Boolean [^java.time.temporal.TemporalUnit this13598] (.isTimeBased this13598)))
(clojure.core/defn get-duration {:arglists (quote (["java.time.temporal.TemporalUnit"]))} (^java.time.Duration [^java.time.temporal.TemporalUnit this13599] (jti/getter duration this13599)))
(clojure.core/defn add-to {:arglists (quote (["java.time.temporal.TemporalUnit" "java.time.temporal.Temporal" "long"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalUnit this13600 ^java.time.temporal.Temporal java-time-temporal-Temporal13601 ^long long13602] (.addTo this13600 java-time-temporal-Temporal13601 long13602)))
(clojure.core/defn between {:arglists (quote (["java.time.temporal.TemporalUnit" "java.time.temporal.Temporal" "java.time.temporal.Temporal"]))} (^long [^java.time.temporal.TemporalUnit this13603 ^java.time.temporal.Temporal java-time-temporal-Temporal13604 ^java.time.temporal.Temporal java-time-temporal-Temporal13605] (.between this13603 java-time-temporal-Temporal13604 java-time-temporal-Temporal13605)))
(clojure.core/defn is-duration-estimated {:arglists (quote (["java.time.temporal.TemporalUnit"]))} (^java.lang.Boolean [^java.time.temporal.TemporalUnit this13606] (.isDurationEstimated this13606)))
(clojure.core/defn is-date-based {:arglists (quote (["java.time.temporal.TemporalUnit"]))} (^java.lang.Boolean [^java.time.temporal.TemporalUnit this13607] (.isDateBased this13607)))
