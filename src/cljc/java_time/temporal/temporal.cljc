(ns cljc.java-time.temporal.temporal (:require [cljs.java-time.interop :as jti] #? (:cljs [java.time.temporal :refer [Temporal]])) (:refer-clojure :exclude [get range format min max next name resolve]) #? (:clj (:import [java.time.temporal Temporal])))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.Temporal this13486 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13487] (.range this13486 java-time-temporal-TemporalField13487)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this13488 ^long long13489 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit13490] (.plus this13488 long13489 java-time-temporal-TemporalUnit13490)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this13491 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount13492] (.plus this13491 java-time-temporal-TemporalAmount13492)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.Temporal this13493 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery13494] (.query this13493 java-time-temporal-TemporalQuery13494)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this13495 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount13496] (.minus this13495 java-time-temporal-TemporalAmount13496)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this13497 ^long long13498 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit13499] (.minus this13497 long13498 java-time-temporal-TemporalUnit13499)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.Temporal this13500 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13501] (.getLong this13500 java-time-temporal-TemporalField13501)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.Temporal this13502 ^java.time.temporal.Temporal java-time-temporal-Temporal13503 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit13504] (.until this13502 java-time-temporal-Temporal13503 java-time-temporal-TemporalUnit13504)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [this13505 G__13506] #? (:cljs (.isSupported ^java.time.temporal.Temporal this13505 G__13506) :clj (clojure.core/cond (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalUnit") G__13506)) (clojure.core/let [G__13506 ^"java.time.temporal.TemporalUnit" G__13506] (.isSupported ^java.time.temporal.Temporal this13505 G__13506)) (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalField") G__13506)) (clojure.core/let [G__13506 ^"java.time.temporal.TemporalField" G__13506] (.isSupported ^java.time.temporal.Temporal this13505 G__13506)) :else (throw (java.lang.IllegalArgumentException. "no corresponding java.time method with these args"))))))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this13507 ^java.time.temporal.TemporalAdjuster java-time-temporal-TemporalAdjuster13508] (.with this13507 java-time-temporal-TemporalAdjuster13508)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this13509 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13510 ^long long13511] (.with this13509 java-time-temporal-TemporalField13510 long13511)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.Temporal this13512 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13513] (.get this13512 java-time-temporal-TemporalField13513)))
