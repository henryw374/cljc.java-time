(ns cljc.java-time.temporal.temporal (:require [cljs.java-time.interop :as jti] #? (:cljs [java.time.temporal :refer [Temporal]])) (:refer-clojure :exclude [get range format min max next name resolve]) #? (:clj (:import [java.time.temporal Temporal])))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.Temporal this4705 ^java.time.temporal.TemporalField java-time-temporal-TemporalField4706] (.range this4705 java-time-temporal-TemporalField4706)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this4707 ^long long4708 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit4709] (.plus this4707 long4708 java-time-temporal-TemporalUnit4709)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this4710 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount4711] (.plus this4710 java-time-temporal-TemporalAmount4711)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.Temporal this4712 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery4713] (.query this4712 java-time-temporal-TemporalQuery4713)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this4714 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount4715] (.minus this4714 java-time-temporal-TemporalAmount4715)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this4716 ^long long4717 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit4718] (.minus this4716 long4717 java-time-temporal-TemporalUnit4718)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.Temporal this4719 ^java.time.temporal.TemporalField java-time-temporal-TemporalField4720] (.getLong this4719 java-time-temporal-TemporalField4720)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.Temporal this4721 ^java.time.temporal.Temporal java-time-temporal-Temporal4722 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit4723] (.until this4721 java-time-temporal-Temporal4722 java-time-temporal-TemporalUnit4723)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [this4724 G__4725] #? (:cljs (.isSupported ^java.time.temporal.Temporal this4724 G__4725) :clj (clojure.core/cond (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalUnit") G__4725)) (clojure.core/let [G__4725 ^"java.time.temporal.TemporalUnit" G__4725] (.isSupported ^java.time.temporal.Temporal this4724 G__4725)) (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalField") G__4725)) (clojure.core/let [G__4725 ^"java.time.temporal.TemporalField" G__4725] (.isSupported ^java.time.temporal.Temporal this4724 G__4725)) :else (throw (java.lang.IllegalArgumentException. "no corresponding java.time method with these args"))))))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this4726 ^java.time.temporal.TemporalAdjuster java-time-temporal-TemporalAdjuster4727] (.with this4726 java-time-temporal-TemporalAdjuster4727)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this4728 ^java.time.temporal.TemporalField java-time-temporal-TemporalField4729 ^long long4730] (.with this4728 java-time-temporal-TemporalField4729 long4730)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.Temporal this4731 ^java.time.temporal.TemporalField java-time-temporal-TemporalField4732] (.get this4731 java-time-temporal-TemporalField4732)))
