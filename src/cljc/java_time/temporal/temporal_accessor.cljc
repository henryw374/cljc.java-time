(ns cljc.java-time.temporal.temporal-accessor (:require [cljs.java-time.interop :as jti] #? (:cljs [java.time.temporal :refer [TemporalAccessor]])) (:refer-clojure :exclude [get range format min max next name resolve]) #? (:clj (:import [java.time.temporal TemporalAccessor])))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.TemporalAccessor this4800 ^java.time.temporal.TemporalField java-time-temporal-TemporalField4801] (.get this4800 java-time-temporal-TemporalField4801)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.TemporalAccessor this4802 ^java.time.temporal.TemporalField java-time-temporal-TemporalField4803] (.getLong this4802 java-time-temporal-TemporalField4803)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.TemporalAccessor this4804 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery4805] (.query this4804 java-time-temporal-TemporalQuery4805)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [^java.time.temporal.TemporalAccessor this4806 ^java.time.temporal.TemporalField java-time-temporal-TemporalField4807] (.isSupported this4806 java-time-temporal-TemporalField4807)))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.TemporalAccessor" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.TemporalAccessor this4808 ^java.time.temporal.TemporalField java-time-temporal-TemporalField4809] (.range this4808 java-time-temporal-TemporalField4809)))
