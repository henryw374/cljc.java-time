(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal Temporal]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.Temporal this12827 ^java.time.temporal.TemporalField java-time-temporal-TemporalField12828] (.range this12827 java-time-temporal-TemporalField12828)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this12829 ^long long12830 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit12831] (.plus this12829 long12830 java-time-temporal-TemporalUnit12831)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this12832 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount12833] (.plus this12832 java-time-temporal-TemporalAmount12833)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.Temporal this12834 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery12835] (.query this12834 java-time-temporal-TemporalQuery12835)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this12836 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount12837] (.minus this12836 java-time-temporal-TemporalAmount12837)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this12838 ^long long12839 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit12840] (.minus this12838 long12839 java-time-temporal-TemporalUnit12840)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.Temporal this12841 ^java.time.temporal.TemporalField java-time-temporal-TemporalField12842] (.getLong this12841 java-time-temporal-TemporalField12842)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.Temporal this12843 ^java.time.temporal.Temporal java-time-temporal-Temporal12844 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit12845] (.until this12843 java-time-temporal-Temporal12844 java-time-temporal-TemporalUnit12845)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [this12846 G__12847] (clojure.core/cond (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalUnit") G__12847)) (clojure.core/let [G__12847 ^"java.time.temporal.TemporalUnit" G__12847] (.isSupported ^java.time.temporal.Temporal this12846 G__12847)) (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalField") G__12847)) (clojure.core/let [G__12847 ^"java.time.temporal.TemporalField" G__12847] (.isSupported ^java.time.temporal.Temporal this12846 G__12847)) :else (throw (java.lang.IllegalArgumentException. "no corresponding java.time method with these args")))))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this12848 ^java.time.temporal.TemporalAdjuster java-time-temporal-TemporalAdjuster12849] (.with this12848 java-time-temporal-TemporalAdjuster12849)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this12850 ^java.time.temporal.TemporalField java-time-temporal-TemporalField12851 ^long long12852] (.with this12850 java-time-temporal-TemporalField12851 long12852)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.Temporal this12853 ^java.time.temporal.TemporalField java-time-temporal-TemporalField12854] (.get this12853 java-time-temporal-TemporalField12854)))
