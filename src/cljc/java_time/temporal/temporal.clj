(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [get range format min max next name resolve]) (:import [java.time.temporal Temporal]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.Temporal this7402 ^java.time.temporal.TemporalField java-time-temporal-TemporalField7403] (.range this7402 java-time-temporal-TemporalField7403)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this7404 ^long long7405 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit7406] (.plus this7404 long7405 java-time-temporal-TemporalUnit7406)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this7407 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount7408] (.plus this7407 java-time-temporal-TemporalAmount7408)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.Temporal this7409 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery7410] (.query this7409 java-time-temporal-TemporalQuery7410)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this7411 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount7412] (.minus this7411 java-time-temporal-TemporalAmount7412)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this7413 ^long long7414 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit7415] (.minus this7413 long7414 java-time-temporal-TemporalUnit7415)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.Temporal this7416 ^java.time.temporal.TemporalField java-time-temporal-TemporalField7417] (.getLong this7416 java-time-temporal-TemporalField7417)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.Temporal this7418 ^java.time.temporal.Temporal java-time-temporal-Temporal7419 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit7420] (.until this7418 java-time-temporal-Temporal7419 java-time-temporal-TemporalUnit7420)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [this7421 G__7422] (clojure.core/cond (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalUnit") G__7422)) (clojure.core/let [G__7422 ^"java.time.temporal.TemporalUnit" G__7422] (.isSupported ^java.time.temporal.Temporal this7421 G__7422)) (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalField") G__7422)) (clojure.core/let [G__7422 ^"java.time.temporal.TemporalField" G__7422] (.isSupported ^java.time.temporal.Temporal this7421 G__7422)) :else (throw (java.lang.IllegalArgumentException. "no corresponding java.time method with these args")))))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this7423 ^java.time.temporal.TemporalAdjuster java-time-temporal-TemporalAdjuster7424] (.with this7423 java-time-temporal-TemporalAdjuster7424)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this7425 ^java.time.temporal.TemporalField java-time-temporal-TemporalField7426 ^long long7427] (.with this7425 java-time-temporal-TemporalField7426 long7427)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.Temporal this7428 ^java.time.temporal.TemporalField java-time-temporal-TemporalField7429] (.get this7428 java-time-temporal-TemporalField7429)))
