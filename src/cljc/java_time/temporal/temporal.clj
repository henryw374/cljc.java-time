(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal Temporal]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.Temporal this5606 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5607] (.range this5606 java-time-temporal-TemporalField5607)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this5608 ^long long5609 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit5610] (.plus this5608 long5609 java-time-temporal-TemporalUnit5610)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this5611 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount5612] (.plus this5611 java-time-temporal-TemporalAmount5612)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.Temporal this5613 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery5614] (.query this5613 java-time-temporal-TemporalQuery5614)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this5615 ^long long5616 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit5617] (.minus this5615 long5616 java-time-temporal-TemporalUnit5617)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this5618 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount5619] (.minus this5618 java-time-temporal-TemporalAmount5619)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.Temporal this5620 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5621] (.getLong this5620 java-time-temporal-TemporalField5621)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.Temporal this5622 ^java.time.temporal.Temporal java-time-temporal-Temporal5623 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit5624] (.until this5622 java-time-temporal-Temporal5623 java-time-temporal-TemporalUnit5624)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [this5625 G__5626] (clojure.core/cond (clojure.core/and (clojure.core/instance? java.time.temporal.TemporalUnit G__5626)) (clojure.core/let [G__5626 ^"java.time.temporal.TemporalUnit" G__5626] (.isSupported ^java.time.temporal.Temporal this5625 G__5626)) (clojure.core/and (clojure.core/instance? java.time.temporal.TemporalField G__5626)) (clojure.core/let [G__5626 ^"java.time.temporal.TemporalField" G__5626] (.isSupported ^java.time.temporal.Temporal this5625 G__5626)) :else (throw (java.lang.IllegalArgumentException. "no corresponding java.time method with these args")))))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this5627 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5628 ^long long5629] (.with this5627 java-time-temporal-TemporalField5628 long5629)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this5630 ^java.time.temporal.TemporalAdjuster java-time-temporal-TemporalAdjuster5631] (.with this5630 java-time-temporal-TemporalAdjuster5631)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.Temporal this5632 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5633] (.get this5632 java-time-temporal-TemporalField5633)))
