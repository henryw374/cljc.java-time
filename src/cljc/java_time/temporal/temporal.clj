(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal Temporal]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.Temporal this8648 ^java.time.temporal.TemporalField java-time-temporal-TemporalField8649] (.range this8648 java-time-temporal-TemporalField8649)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this8650 ^long long8651 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit8652] (.plus this8650 long8651 java-time-temporal-TemporalUnit8652)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this8653 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount8654] (.plus this8653 java-time-temporal-TemporalAmount8654)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.Temporal this8655 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery8656] (.query this8655 java-time-temporal-TemporalQuery8656)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this8657 ^long long8658 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit8659] (.minus this8657 long8658 java-time-temporal-TemporalUnit8659)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this8660 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount8661] (.minus this8660 java-time-temporal-TemporalAmount8661)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.Temporal this8662 ^java.time.temporal.TemporalField java-time-temporal-TemporalField8663] (.getLong this8662 java-time-temporal-TemporalField8663)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.Temporal this8664 ^java.time.temporal.Temporal java-time-temporal-Temporal8665 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit8666] (.until this8664 java-time-temporal-Temporal8665 java-time-temporal-TemporalUnit8666)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [this8667 G__8668] (clojure.core/cond (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalUnit") G__8668)) (clojure.core/let [G__8668 ^"java.time.temporal.TemporalUnit" G__8668] (.isSupported ^java.time.temporal.Temporal this8667 G__8668)) (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalField") G__8668)) (clojure.core/let [G__8668 ^"java.time.temporal.TemporalField" G__8668] (.isSupported ^java.time.temporal.Temporal this8667 G__8668)) :else (throw (java.lang.IllegalArgumentException. "no corresponding java.time method with these args")))))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this8669 ^java.time.temporal.TemporalField java-time-temporal-TemporalField8670 ^long long8671] (.with this8669 java-time-temporal-TemporalField8670 long8671)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this8672 ^java.time.temporal.TemporalAdjuster java-time-temporal-TemporalAdjuster8673] (.with this8672 java-time-temporal-TemporalAdjuster8673)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.Temporal this8674 ^java.time.temporal.TemporalField java-time-temporal-TemporalField8675] (.get this8674 java-time-temporal-TemporalField8675)))
