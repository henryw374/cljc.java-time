(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal Temporal]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.Temporal this5605 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5606] (.range this5605 java-time-temporal-TemporalField5606)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this5607 ^long long5608 ^java.time.temporal.ChronoUnit java-time-temporal-TemporalUnit5609] (.plus this5607 long5608 java-time-temporal-TemporalUnit5609)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this5610 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount5611] (.plus this5610 java-time-temporal-TemporalAmount5611)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.Temporal this5612 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery5613] (.query this5612 java-time-temporal-TemporalQuery5613)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this5614 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount5615] (.minus this5614 java-time-temporal-TemporalAmount5615)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this5616 ^long long5617 ^java.time.temporal.ChronoUnit java-time-temporal-TemporalUnit5618] (.minus this5616 long5617 java-time-temporal-TemporalUnit5618)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.Temporal this5619 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5620] (.getLong this5619 java-time-temporal-TemporalField5620)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.Temporal this5621 ^java.time.temporal.Temporal java-time-temporal-Temporal5622 ^java.time.temporal.ChronoUnit java-time-temporal-TemporalUnit5623] (.until this5621 java-time-temporal-Temporal5622 java-time-temporal-TemporalUnit5623)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [this5624 G__5625] (clojure.core/cond (clojure.core/and (clojure.core/instance? java.time.temporal.ChronoUnit G__5625)) (clojure.core/let [G__5625 ^"java.time.temporal.ChronoUnit" G__5625] (.isSupported ^java.time.temporal.Temporal this5624 G__5625)) (clojure.core/and (clojure.core/instance? java.time.temporal.TemporalField G__5625)) (clojure.core/let [G__5625 ^"java.time.temporal.TemporalField" G__5625] (.isSupported ^java.time.temporal.Temporal this5624 G__5625)) :else (throw (java.lang.IllegalArgumentException. "no corresponding java.time method with these args")))))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this5626 ^java.time.temporal.TemporalAdjuster java-time-temporal-TemporalAdjuster5627] (.with this5626 java-time-temporal-TemporalAdjuster5627)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this5628 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5629 ^long long5630] (.with this5628 java-time-temporal-TemporalField5629 long5630)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.Temporal this5631 ^java.time.temporal.TemporalField java-time-temporal-TemporalField5632] (.get this5631 java-time-temporal-TemporalField5632)))
