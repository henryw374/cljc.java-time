(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [abs get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal Temporal]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.Temporal this15502 ^java.time.temporal.TemporalField java-time-temporal-TemporalField15503] (.range this15502 java-time-temporal-TemporalField15503)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this15504 ^long long15505 ^java.time.temporal.ChronoUnit java-time-temporal-TemporalUnit15506] (.plus this15504 long15505 java-time-temporal-TemporalUnit15506)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this15507 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount15508] (.plus this15507 java-time-temporal-TemporalAmount15508)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.Temporal this15509 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery15510] (.query this15509 java-time-temporal-TemporalQuery15510)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this15511 ^long long15512 ^java.time.temporal.ChronoUnit java-time-temporal-TemporalUnit15513] (.minus this15511 long15512 java-time-temporal-TemporalUnit15513)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this15514 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount15515] (.minus this15514 java-time-temporal-TemporalAmount15515)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.Temporal this15516 ^java.time.temporal.TemporalField java-time-temporal-TemporalField15517] (.getLong this15516 java-time-temporal-TemporalField15517)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.Temporal this15518 ^java.time.temporal.Temporal java-time-temporal-Temporal15519 ^java.time.temporal.ChronoUnit java-time-temporal-TemporalUnit15520] (.until this15518 java-time-temporal-Temporal15519 java-time-temporal-TemporalUnit15520)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [this15521 G__15522] (clojure.core/cond (clojure.core/and (clojure.core/instance? java.time.temporal.ChronoUnit G__15522)) (clojure.core/let [G__15522 ^"java.time.temporal.ChronoUnit" G__15522] (.isSupported ^java.time.temporal.Temporal this15521 G__15522)) (clojure.core/and (clojure.core/instance? java.time.temporal.TemporalField G__15522)) (clojure.core/let [G__15522 ^"java.time.temporal.TemporalField" G__15522] (.isSupported ^java.time.temporal.Temporal this15521 G__15522)) :else (throw (java.lang.IllegalArgumentException. "no corresponding java.time method with these args")))))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this15523 ^java.time.temporal.TemporalField java-time-temporal-TemporalField15524 ^long long15525] (.with this15523 java-time-temporal-TemporalField15524 long15525)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this15526 ^java.time.temporal.TemporalAdjuster java-time-temporal-TemporalAdjuster15527] (.with this15526 java-time-temporal-TemporalAdjuster15527)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.Temporal this15528 ^java.time.temporal.TemporalField java-time-temporal-TemporalField15529] (.get this15528 java-time-temporal-TemporalField15529)))
