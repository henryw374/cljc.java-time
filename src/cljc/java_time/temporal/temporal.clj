(ns cljc.java-time.temporal.temporal (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal Temporal]))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.Temporal this61310 ^java.time.temporal.TemporalField java-time-temporal-TemporalField61311] (.range this61310 java-time-temporal-TemporalField61311)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this61312 ^long long61313 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit61314] (.plus this61312 long61313 java-time-temporal-TemporalUnit61314)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this61315 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount61316] (.plus this61315 java-time-temporal-TemporalAmount61316)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.Temporal this61317 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery61318] (.query this61317 java-time-temporal-TemporalQuery61318)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this61319 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount61320] (.minus this61319 java-time-temporal-TemporalAmount61320)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this61321 ^long long61322 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit61323] (.minus this61321 long61322 java-time-temporal-TemporalUnit61323)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.Temporal this61324 ^java.time.temporal.TemporalField java-time-temporal-TemporalField61325] (.getLong this61324 java-time-temporal-TemporalField61325)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.Temporal this61326 ^java.time.temporal.Temporal java-time-temporal-Temporal61327 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit61328] (.until this61326 java-time-temporal-Temporal61327 java-time-temporal-TemporalUnit61328)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [this61329 G__61330] (clojure.core/cond (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalUnit") G__61330)) (clojure.core/let [G__61330 ^"java.time.temporal.TemporalUnit" G__61330] (.isSupported ^java.time.temporal.Temporal this61329 G__61330)) (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalField") G__61330)) (clojure.core/let [G__61330 ^"java.time.temporal.TemporalField" G__61330] (.isSupported ^java.time.temporal.Temporal this61329 G__61330)) :else (throw (java.lang.IllegalArgumentException. "no corresponding java.time method with these args")))))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this61331 ^java.time.temporal.TemporalAdjuster java-time-temporal-TemporalAdjuster61332] (.with this61331 java-time-temporal-TemporalAdjuster61332)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this61333 ^java.time.temporal.TemporalField java-time-temporal-TemporalField61334 ^long long61335] (.with this61333 java-time-temporal-TemporalField61334 long61335)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.Temporal this61336 ^java.time.temporal.TemporalField java-time-temporal-TemporalField61337] (.get this61336 java-time-temporal-TemporalField61337)))
