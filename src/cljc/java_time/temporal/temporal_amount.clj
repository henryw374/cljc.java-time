(ns cljc.java-time.temporal.temporal-amount (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal TemporalAmount]))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.TemporalAmount this61366 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit61367] (.get this61366 java-time-temporal-TemporalUnit61367)))
(clojure.core/defn add-to {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this61368 ^java.time.temporal.Temporal java-time-temporal-Temporal61369] (.addTo this61368 java-time-temporal-Temporal61369)))
(clojure.core/defn subtract-from {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this61370 ^java.time.temporal.Temporal java-time-temporal-Temporal61371] (.subtractFrom this61370 java-time-temporal-Temporal61371)))
(clojure.core/defn get-units {:arglists (quote (["java.time.temporal.TemporalAmount"]))} (^java.util.List [^java.time.temporal.TemporalAmount this61372] (.getUnits this61372)))
