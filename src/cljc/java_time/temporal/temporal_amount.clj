(ns cljc.java-time.temporal.temporal-amount (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal TemporalAmount]))
(clojure.core/defn get-units {:arglists (quote (["java.time.temporal.TemporalAmount"]))} (^java.util.List [^java.time.temporal.TemporalAmount this8650] (.getUnits this8650)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.TemporalAmount this8651 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit8652] (.get this8651 java-time-temporal-TemporalUnit8652)))
(clojure.core/defn add-to {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this8653 ^java.time.temporal.Temporal java-time-temporal-Temporal8654] (.addTo this8653 java-time-temporal-Temporal8654)))
(clojure.core/defn subtract-from {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this8655 ^java.time.temporal.Temporal java-time-temporal-Temporal8656] (.subtractFrom this8655 java-time-temporal-Temporal8656)))
