(ns cljc.java-time.temporal.temporal-amount (:refer-clojure :exclude [abs get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal TemporalAmount]))
(clojure.core/defn add-to {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this15558 ^java.time.temporal.Temporal java-time-temporal-Temporal15559] (.addTo this15558 java-time-temporal-Temporal15559)))
(clojure.core/defn subtract-from {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this15560 ^java.time.temporal.Temporal java-time-temporal-Temporal15561] (.subtractFrom this15560 java-time-temporal-Temporal15561)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.TemporalAmount this15562 ^java.time.temporal.ChronoUnit java-time-temporal-TemporalUnit15563] (.get this15562 java-time-temporal-TemporalUnit15563)))
(clojure.core/defn get-units {:arglists (quote (["java.time.temporal.TemporalAmount"]))} (^java.util.List [^java.time.temporal.TemporalAmount this15564] (.getUnits this15564)))
