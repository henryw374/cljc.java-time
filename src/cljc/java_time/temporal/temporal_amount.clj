(ns cljc.java-time.temporal.temporal-amount (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal TemporalAmount]))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.TemporalAmount this5661 ^java.time.temporal.ChronoUnit java-time-temporal-TemporalUnit5662] (.get this5661 java-time-temporal-TemporalUnit5662)))
(clojure.core/defn add-to {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this5663 ^java.time.temporal.Temporal java-time-temporal-Temporal5664] (.addTo this5663 java-time-temporal-Temporal5664)))
(clojure.core/defn subtract-from {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this5665 ^java.time.temporal.Temporal java-time-temporal-Temporal5666] (.subtractFrom this5665 java-time-temporal-Temporal5666)))
(clojure.core/defn get-units {:arglists (quote (["java.time.temporal.TemporalAmount"]))} (^java.util.List [^java.time.temporal.TemporalAmount this5667] (.getUnits this5667)))
