(ns cljc.java-time.temporal.temporal-amount (:refer-clojure :exclude [get range format min max next name resolve short]) (:require [cljc.java-time.extn.calendar-awareness]) (:import [java.time.temporal TemporalAmount]))
(clojure.core/defn add-to {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this15179 ^java.time.temporal.Temporal java-time-temporal-Temporal15180] (.addTo this15179 java-time-temporal-Temporal15180)))
(clojure.core/defn subtract-from {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this15181 ^java.time.temporal.Temporal java-time-temporal-Temporal15182] (.subtractFrom this15181 java-time-temporal-Temporal15182)))
(clojure.core/defn get-units {:arglists (quote (["java.time.temporal.TemporalAmount"]))} (^java.util.List [^java.time.temporal.TemporalAmount this15183] (.getUnits this15183)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.TemporalAmount this15184 ^java.time.temporal.ChronoUnit java-time-temporal-TemporalUnit15185] (.get this15184 java-time-temporal-TemporalUnit15185)))
